generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  walletId String  @id @unique
  username String  @unique // ask user on signup itself
  email    String? @unique

  // Course relation
  courses        Course[] @relation("UserCourses")
  // activeCourse   Course?  @relation("ActiveCourse", fields: [activeCourseId], references: [id])
  activeCourseId Int?     @unique

  // Video progress relation
  videoProgress VideoProgress[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // // Settings
  // notificationsEnabled Boolean? @default(true)
  // soundEffectsEnabled  Boolean? @default(true)
  // darkModeEnabled      Boolean? @default(false)

  // // Learning Preferences
  // sessionDuration Int? @default(25) // in minutes
  // breakDuration   Int? @default(5) // in minutes
  // sessionsPerDay  Int? @default(4)
}

model Course {
  id         Int      @id @default(autoincrement())
  playlistId String   @unique // course ID
  title      String
  videos     Video[]  @relation("CourseVideos")
  videoCount Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  // Relation to the user

  userId String
  User   User   @relation("UserCourses", fields: [userId], references: [walletId])

  // Video progress relation
  videoProgress VideoProgress[]
}

model Video {
  id           Int      @id @default(autoincrement())
  videoId      String   @unique // Make videoId unique to reference it in VideoProgress
  title        String
  thumbnail    String
  position     Int
  channelTitle String
  channelId    String
  playlistId   String
  playlist     Course   @relation("CourseVideos", fields: [playlistId], references: [playlistId])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Video progress relation
  videoProgress VideoProgress[]
}

model VideoProgress {
  id          Int      @id @default(autoincrement())
  userId      String
  videoId     String
  courseId    Int
  progress    Float    @default(0) // Percentage of video watched (0-100)
  completed   Boolean  @default(false)
  lastWatched DateTime @default(now())

  // Relations
  user   User   @relation(fields: [userId], references: [walletId])
  course Course @relation(fields: [courseId], references: [id])
  video  Video  @relation(fields: [videoId], references: [videoId])

  // Compound unique index to ensure one progress record per user per video
  @@unique([userId, videoId])
}
