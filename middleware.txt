import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

// Define public routes that don't require authentication
const publicRoutes = ['/', '/connect']

export function middleware(request: NextRequest) {
  // Get the pathname from the request
  const path = request.nextUrl.pathname

  // Check if the current path is a public route
  const isPublicRoute = publicRoutes.some(route => path === route || path.startsWith('/api/'))

  // Get the wallet address from the session
  const walletAddress = request.cookies.get('wallet_address')?.value

  // If it's a public route, allow access
  if (isPublicRoute) {
    return NextResponse.next()
  }

  // If user is not authenticated and trying to access protected route,
  // redirect to home page
  if (!walletAddress) {
    return NextResponse.redirect(new URL('/', request.url))
  }

  // Allow access to protected routes for authenticated users
  return NextResponse.next()
}

// Configure which routes the middleware should run on
export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     * - public folder
     */
    '/((?!_next/static|_next/image|favicon.ico|public).*)',
  ],
}
